{"name":"Object. watch","tagline":"Object.watch implementation using ECMAScript 5. Boom.","body":"Object._watch\r\n============\r\n\r\nObject property watching using ECMAScript 5\r\n\r\nObject.prototype.watch is a coming feature of ECMAScript 6.\r\n\r\nBut why wait?\r\n\r\n##How to Use\r\n\r\n###Local Watching\r\n```\r\nvar w = new Watchable({a: 1});\r\n\r\nconsole.log( w.a ); // Logs: 1\r\n\r\nw._watch('a', function(property, oldValue, newValue){\r\n    console.log(property, oldValue, newValue);\r\n});\r\n\r\nw.a = 'test'; // Logs: a 1 'test' / Returns: 'test'\r\n\r\nw._unwatch('a');\r\n\r\nw.a = 'test2'; // Returns: 'test2'\r\n\r\n```\r\n\r\n###Remote Watching\r\n```\r\nvar o = {x: 1};\r\n\r\nvar w = new Watchable();\r\n\r\nw._watch('x', function(property, oldValue, newValue){\r\n    console.log(property, oldValue, newValue);\r\n}, null, o); // Note the 4th parameter\r\n\r\no.x = 2; // Logs: x 1 2 / Returns: 2\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}